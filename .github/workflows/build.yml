# .github/workflows/build.yml

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 캐시 설정
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle에 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle 빌드 (테스트 제외)
        run: ./gradlew build -x test

      - name: SCP를 사용하여 JAR 파일 전송
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "build/libs/reeltalkbe-0.0.1-SNAPSHOT.jar"
          target: "~/app"
          strip_components: 2

      - name: 원격 서버에서 배포 스크립트 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -x
            
            JAR_FILE="reeltalkbe-0.0.1-SNAPSHOT.jar"
            APP_DIR="$HOME/app"
            JAR_PATH="$APP_DIR/$JAR_FILE"
            LOG_FILE="$APP_DIR/nohup.out"
            PGREP_PATTERN="java -jar $JAR_PATH"

            echo "--- 디버깅 스크립트 시작 ---"
            
            if [ ! -f "$JAR_PATH" ]; then
              echo "오류: JAR 파일을 찾을 수 없습니다."
              exit 1
            fi
            
            set +e # kill 명령어 때문에 스크립트가 중단되지 않도록 설정
            
            PID=$(pgrep -f "$PGREP_PATTERN")
            echo "pgrep으로 찾은 PID: '$PID'"

            if [ -n "$PID" ]; then
              echo "프로세스 종료 시도: $PID"
              kill -15 $PID
              KILL_CODE=$?
              echo "kill 명령어 종료 코드: $KILL_CODE"
              sleep 5
              echo "sleep 완료."
            else
              echo "실행 중인 프로세스가 없습니다."
            fi
            
            echo "새 애플리케이션 시작 시도 (private 프로필 활성화)..."
            nohup java -jar "$JAR_PATH" --spring.profiles.active=private > "$LOG_FILE" 2>&1 &
            NOHUP_CODE=$?
            echo "nohup 명령어 종료 코드: $NOHUP_CODE"
            
            sleep 5
            echo "애플리케이션 실행 확인:"
            ps -f -u $USER | grep java
            
            echo "--- 디버깅 스크립트 종료 ---"
