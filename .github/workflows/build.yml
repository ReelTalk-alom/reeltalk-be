# .github/workflows/build.yml

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 캐시 설정
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle에 실행 권한 부여
        run: chmod +x ./gradlew

      # --- 중요: 여기서 application.yml 파일을 생성 --- 
      - name: application.yml 파일 생성
        run: echo "${{ secrets.APP_PRIVATE_YML }}" > application.yml

      - name: Gradle 빌드 (테스트 제외)
        run: ./gradlew build -x test

      # --- 중요: JAR 파일과 설정 파일을 함께 전송 ---
      - name: SCP를 사용하여 빌드 및 설정 파일 전송
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "build/libs/*.jar,application.yml" # 두 파일을 모두 전송
          target: "~/app"
          strip_components: 2

      - name: 애플리케이션 배포 및 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            APP_DIR="$HOME/app"
            JAR_FILE=$(ls -t $APP_DIR/*.jar | head -n 1)
            LOG_FILE="$APP_DIR/nohup.out"

            echo "기존 프로세스를 찾아서 종료합니다."
            PID=$(ps -ef | grep "$JAR_FILE" | grep -v grep | awk '{print $2}')
            if [ -n "$PID" ]; then
              echo "기존 프로세스(PID: $PID)를 종료합니다."
              kill -9 $PID
              sleep 5
            fi

            # --- 중요: 서버에서는 더 이상 파일을 생성하지 않음 ---
            echo "새 애플리케이션을 시작합니다: ${JAR_FILE}"
            nohup java -jar "$JAR_FILE" > "$LOG_FILE" 2>&1 &
            
            echo "배포 스크립트가 완료되었습니다. 10초 후 로그를 확인합니다."
            sleep 10
            cat $LOG_FILE
